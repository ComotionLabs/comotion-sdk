# coding: utf-8

"""
    Comotion Dash API

    Comotion Dash API  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import comodash_api_client_lowlevel
from comodash_api_client_lowlevel.models.query_status_all_of import QueryStatusAllOf  # noqa: E501
from comodash_api_client_lowlevel.rest import ApiException

class TestQueryStatusAllOf(unittest.TestCase):
    """QueryStatusAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test QueryStatusAllOf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = comodash_api_client_lowlevel.models.query_status_all_of.QueryStatusAllOf()  # noqa: E501
        if include_optional :
            return QueryStatusAllOf(
                query_id = '06ba1d95-8c4f-460c-90b3-bc68fddf2fde', 
                statement_type = 'DDL', 
                status = comodash_api_client_lowlevel.models.query_status_all_of_status.QueryStatus_allOf_status(
                    state = 'SUCCEEDED', 
                    submission_date_time = '11-28-2021 18:51:01', 
                    completion_date_time = '11-28-2021 18:53:01', )
            )
        else :
            return QueryStatusAllOf(
                query_id = '06ba1d95-8c4f-460c-90b3-bc68fddf2fde',
                statement_type = 'DDL',
                status = comodash_api_client_lowlevel.models.query_status_all_of_status.QueryStatus_allOf_status(
                    state = 'SUCCEEDED', 
                    submission_date_time = '11-28-2021 18:51:01', 
                    completion_date_time = '11-28-2021 18:53:01', ),
        )

    def testQueryStatusAllOf(self):
        """Test QueryStatusAllOf"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
